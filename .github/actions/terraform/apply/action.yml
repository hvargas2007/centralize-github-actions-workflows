name: Reusable - Terraform Apply
description: Action to execute terraform apply command
inputs:
  ACCESS_TOKEN:
    description: 'Token de acceso personal de GitHub con permisos adecuados'
    required: true
  AWS_BACKEND:
    description: 'Tipo de backend para almacenar el estado de Terraform (ej. s3)'
    required: true
    type: string
  AWS_REGION:
    description: 'Región de AWS donde se desplegarán los recursos (ej. us-east-1)'
    required: true
    type: string
  AWS_ROLE:
    description: 'ARN del rol de AWS que se asumirá para ejecutar las acciones'
    required: true
    type: string
  PROJECT_NAME:
    description: 'Nombre del proyecto o módulo Terraform a desplegar'
    required: true
    type: string
  USERNAME_GITHUB:
    description: 'Nombre de usuario de GitHub que ejecuta la acción'
    required: true
outputs: {}

runs:
  using: composite
  steps:
    - name: Pull source code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ inputs.AWS_ROLE }}
        aws-region: ${{ inputs.AWS_REGION }}
        role-session-name: GitHub-OIDC-TERRAFORM

    - name: Configure git credentials to pull terraform modules
      run: git config --global url."https://${{ inputs.USERNAME_GITHUB }}:${{ inputs.ACCESS_TOKEN }}@github.com".insteadOf https://github.com
      shell: bash

    - name: Install boto3
      run: |
        python -m pip install --upgrade pip
        pip install boto3
      shell: bash

    - name: State Checker
      env:
        AWS_BACKEND_ID: ${{ inputs.AWS_BACKEND }}
      run: |
        chmod +x state-checker.py  
        python3 state-checker.py $AWS_BACKEND_ID
      shell: bash

    - name: Update Backend S3 configurations
      env:
        PROJECT_NAME: ${{ inputs.PROJECT_NAME }}
        AWS_BACKEND_ID: ${{ inputs.AWS_BACKEND }}
      run: |
        sed -i "s/BUCKET_NAME/$AWS_BACKEND_ID/" provider.tf
        sed -i "s/PROJECT_NAME/$PROJECT_NAME/" provider.tf
        cat provider.tf
      shell: bash

    - name: Set Up Terraform Environment
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      id: init
      run: terraform init
      shell: bash

    - name: Terraform Validate
      id: validate
      run: terraform validate
      shell: bash

    - name: Terraform Apply
      id: apply
      run: terraform apply --auto-approve -var-file=env/${{ github.ref_name }}.auto.tfvars
      shell: bash
